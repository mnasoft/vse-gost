
* Сервере mnasoft-02 для пользователя mna

** Проверяем работу сервиса postgresql.service
Проверяем работу сервиса

#+begin_src shell
  systemctl status postgresql.service
#+end_src

#+begin_src shell
  sudo -iu postgres
  initdb --locale=ru_RU.UTF-8 --encoding=UTF8 -D /var/lib/postgres/data --data-checksums
#+end_src

** Запускаем postgresql.service

#+begin_src shell
  sudo systemctl enable postgresql.service
  sudo systemctl start  postgresql.service
#+end_src

** Создаем роль mna
#+begin_src shell
  sudo -iu postgres
  createuser -dsRP mna 
#+end_src

** Создаем БД

#+begin_src shell
  sudo -iu mna
  createdb -O mna gost
#+end_src

** Входим в консоль postgresql
#+begin_src shell
  sudo -iu mna
  psql -d gost -U mna
#+end_src

** Создаем таблицу gost
В базе данных gost создаем таблицу gost.

Примечание: поле external_path - удалено. 

#+begin_src sql
  CREATE TABLE public.gost
  (
    id serial PRIMARY KEY,  -- Идентификатор записи;
    designation text,       -- Обозначение Стандарта;
    name text,              -- Наименование Стандарта;
    description text,       -- Краткиое описание Стандарт;
    local_path text,        -- Путь к документу на локальном сервере;
    date date,              -- Дата;
    status text             -- Дествует или нет.
  )
  WITH (
    OIDS=FALSE
  );

  ALTER TABLE public.gost OWNER TO mna;

  COMMENT ON COLUMN public.gost.id IS            'Идентификатор записи.';

  COMMENT ON COLUMN public.gost.designation IS   'Обозначение Стандарта';

  COMMENT ON COLUMN public.gost.name IS          'Наименование Стандарта';

  COMMENT ON COLUMN public.gost.description IS   'Краткиое описание Стандарта';

  COMMENT ON COLUMN public.gost.local_path IS    'Путь к документу на локальном сервере';
#+end_src

** Импортируем содержимое таблицы gost из файла:

#+begin_src sql   
  \copy gost (local_path, designation, date, name, description, status)
  from '/home/mna/out.txt';       
#+end_src

* Последующие действия
См. проект mnas-web.
